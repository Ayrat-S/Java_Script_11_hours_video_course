*****************************************************************************************************************************************************************************
Интерпретатор.
Google переводчик: interpretator - переводчик.

WIKI
https://ru.wikipedia.org/wiki/%D0%98%D0%BD%D1%82%D0%B5%D1%80%D0%BF%D1%80%D0%B5%D1%82%D0%B0%D1%82%D0%BE%D1%80
Интерпрета́тор (interpretator — толкователь) — программа (разновидность транслятора), выполняющая интерпретацию.
Интерпрета́ция — построчный анализ, обработка и выполнение исходного кода программы или запроса, в отличие от компиляции, где весь текст программы, перед запуском 
анализируется и транслируется в машинный или байт-код без её выполнения.

*****************************************************************************************************************************************************************************
Компилятор.

WIKI
https://ru.wikipedia.org/wiki/%D0%9A%D0%BE%D0%BC%D0%BF%D0%B8%D0%BB%D1%8F%D1%82%D0%BE%D1%80
Компиля́тор — программа, переводящая написанный на языке программирования текст в набор машинных кодов.

*****************************************************************************************************************************************************************************
Компиляция.

WIKI
https://ru.wikipedia.org/wiki/%D0%9A%D0%BE%D0%BC%D0%BF%D0%B8%D0%BB%D1%8F%D1%82%D0%BE%D1%80

Компиля́ция — сборка программы, включающая:
1. трансляцию всех модулей программы, написанных на одном или нескольких исходных языках программирования высокого уровня и/или языке ассемблера, в эквивалентные программные 
модули на низкоуровневом языке, близком машинному коду (абсолютный код, объектный модуль, иногда на язык ассемблера) или непосредственно на машинном языке или ином 
двоичнокодовом низкоуровневом командном языке;
2. последующую сборку исполняемой машинной программы, в том числе вставка в программу кода всех функций, импортируемых из статических библиотек и/или генерация кода запроса 
к ОС на загрузку динамических библиотек, из которых программой функции будут вызываться.

Если компилятор генерирует исполняемую машинную программу на машинном языке, то такая программа непосредственно исполняется физической программируемой машиной (например 
компьютером). В других случаях исполняемая машинная программа выполняется соответствующей виртуальной машиной.

На заре развития компьютеров первые компиляторы (трансляторы) называли «программирующими программами»[6] (так как в тот момент программой считался только машинный код, а 
«программирующая программа» была способна из человеческого текста сделать машинный код, то есть запрограммировать ЭВМ).

*****************************************************************************************************************************************************************************
Алгоритм работы простого интерпретатора.

WIKI
https://ru.wikipedia.org/wiki/%D0%98%D0%BD%D1%82%D0%B5%D1%80%D0%BF%D1%80%D0%B5%D1%82%D0%B0%D1%82%D0%BE%D1%80
1. прочитать инструкцию;
2. проанализировать инструкцию и определить соответствующие действия;
3. выполнить соответствующие действия;
4. если не достигнуто условие завершения программы, прочитать следующую инструкцию и перейти к пункту 2.

*****************************************************************************************************************************************************************************
Движок JavaScript — специализированная программа, обрабатывающая JavaScript, в частности, в браузерах.

Сегодня JavaScript может выполняться не только в браузере, но и на сервере или на любом другом устройстве, которое имеет специальную программу, называющуюся «движком» 
JavaScript.
У браузера есть собственный движок, который иногда называют «виртуальная машина JavaScript».
Разные движки имеют разные «кодовые имена». Например:
* V8 – в Chrome, Opera и Edge.
* SpiderMonkey – в Firefox.
* …Ещё есть «Chakra» для IE, «JavaScriptCore», «Nitro» и «SquirrelFish» для Safari и т.д.

https://learn.javascript.ru/intro
Как работают движки?
Движки сложны. Но основы понять легко.
1. Движок (встроенный, если это браузер) читает («парсит») текст скрипта.
2. Затем он преобразует («компилирует») скрипт в машинный язык.
3. После этого машинный код запускается и работает достаточно быстро.
Движок применяет оптимизации на каждом этапе. Он даже просматривает скомпилированный скрипт во время его работы, анализируя проходящие через него данные, и применяет 
оптимизации к машинному коду, полагаясь на полученные знания. В результате скрипты работают очень быстро.

*****************************************************************************************************************************************************************************

