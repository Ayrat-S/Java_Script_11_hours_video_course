*****************************************************************************************************************************************************************************

Bogdan Stashchuk
https://www.youtube.com/watch?v=CxgOKJh4zWE

ВЫРАЖЕНИЕ

0:32:18
Теперь давайте детальнее останвимся на том, что же такое ВЫРАЖЕНИЕ?

Любое ВЫРАЖЕНИЕ всегда ВОЗВРАЩАЕТ ЗНАЧЕНИЕ - это САМОЕ ВАЖНОЕ в понимании того, что такое выражение.

Давайте посмотрим на примеры выражений =>
'abc'
это строка.
Напоминаю, что строки в JS это просто текст, который помещается между одинарными либо двойными кавычками.
Так вот, если вы передадите такую строку интерпертатору JS он вам вернет эту же строку, т.е. результат этого выражения будет та же строка - очень просто.
0:33:01

Второй пример - число, например 
10
это тоже выражение.

Если вы передатите такое число в интерпретатор в JS он вам вернет это же значение
10

Следующий пример =>
5 + 2
это тоже выражение.
Но здесь уже используется оператор 
+
и результатом такого выражения будет число
7

Следующий пример =>
с = 10
оператор присвоения
=
и в данном примере число 10 присваивается переменной с названием
с
это тоже выражение и результатом этого выражения будет то значение, которое вы присваеваете переменной, в данном примере это значение
10
т.е. если переменная
с
уже определена и вы вводите 
с = 10
значение
10
будет присвоено переменной
с
и также, это значение будет возвращено как результат этого выражения.

Следующий пример =>
'Good ' + 'Evening'
Конкатенация строк с помощью оператора 
+
'Good ' + 'Evening'
и результатом этого выражения будет одна строка
Good Evening

Следующий пример =>
a <= b || c !== d
=>
это выражение с несколькими операторами, такими как
|| (оператор "или")
!== (оператор "не равно")
<= (оператор "меньше или равно")
это:
a <= b || c !== d
тоже выражение и напоминаю, что любое выражение возвращает значение.
Об операторах мы будем говорить конечно же вы этом курсе более детально.

Следующий пример =>
myFunction(c, d)
=>
вызов функции - этим вы уже знакомы, потому что мы вызывали функцию 
log
который является методом объекта 
console
так вот, вызов функции это тоже выражение, потому что функция всегда возвращает какое-нибудь значение.
В данном примере 
myFunction
это имя функции которая вызывается, а 
с и d
это аргументы, с которыми мы вызываем эту функцию
myFunction

Итак, это были примеры некоторых выражений.
Сейчас можно перейти обратно в консоль и попробовать ввести некоторые из этих выражений.

Пишем 
10
и JS вернет нам результат этого выражения
10

Пишем 
5+2
и JS вернет нам результат этого выражения
7
Даже если написать с пробелом справа и слева оператора
+
т.е.
5 + 2
JS все-равно вернет результат
7

Теперь соединим две строки, пишем в одинарных кавычках
'Good ' + 'Evening'
и результатом этого выражением будетновая строка
'Good Evening'
обратите внимание что пробел я добавил сразу после слова Good затем закрыл одинарной скобкой.
Если хотите можете добавить пробел перед словом Evening, либо же использовать два оператора
+
и между ними добавить строку с пробелом =>
'Good' +' '+ 'Evening'

Итак, в данном случае
'Good ' + 'Evening'
это так же выражение, потому что вот его результат в консоли
'Good Evening'

Другие выражения с использованием операторов мы изучим немножко позже, но я думаю уже сейчас уже вам должно быть понятно, что любое выражение всегда возвращает значение.
0:36:23



















