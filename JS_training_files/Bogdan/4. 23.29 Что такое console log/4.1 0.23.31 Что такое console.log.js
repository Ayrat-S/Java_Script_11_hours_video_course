// **************************************************************************************************************************************************************************
// Bogdan Stashchuk
// https://www.youtube.com/watch?v=CxgOKJh4zWE

/*
CONSOLE.LOG (это выражение).

0:23:26
console.log('Hello World')
Давайте теперь рассмотрим что же такое console.log
Потому что большинство курсов по JS начинается с того, что вас просят написать console.log в консоли и увидеть привет мир либо hello world, при этом не объясняя что же такое
console.log

Я же хочу пойти от обратного.
Сначала я вам объясню каждую часть этого выражения, и только после этого вы напишете это выражение в консоли.


console - это объект, а у объекта как вы уже знаете есть свойства и каждое свойство это пара => 
КЛЮЧ: ЗНАЧЕНИЕ

log - это метод.
Метод - это функция, которая является значением одного из свойств объекта, т.е. у нашего объекта console есть свойство, значение которого это функция, а такие свойства 
называются методами.

Далее => console.log('Hello World') =>
точка . между console и log это синтаксис JS который называется точечная запись.
С помощью точечной записи можно получать доступ к свойствам объекта.
В данном случае мы получаем с помощью точечной записи доступ к методу объекта - метод называется log.

Далее =>
0:24:56

Скобки () - это вызов метода, это также часть синтаксиса JS, т.е. поставив скобки после log мы говорим что хотим вызвать эту функцию, которая является методом объекта
console. Вызывается метод log.
Внутри вызова метода находится аргумент и в данном примере это просто значение типа строка или string (здесь это => 'Hello World').
Значения типа строка помещаются либо в одинарные, либо в двойные кавычки.

Это описание команды console.log('Hello World') => 
console - объект;
. - точечная запись (доступ к свойствам объекта, т.е. в данном случае доступ к методу объекта);
log - метод (т.е. функция, которая является значением одного из свойств объекта);
() - вызов метода (вызов функции, которая является методом объекта console / в скобках мы передаем в эту функцию log - аргумент в виде строки 'Hello World').
'Hello World' - значение типа "String" (аргумент - значения типа строка помещаются либо в одинарные, либо в двойные кавычки)


CONSOLE.DIR()
Кроме метода log у объекта console есть такие методы как =>
dir 
и с помощью этого метода можно отобразить в консоли все свойства того или иного объекта, например с помощью =>
console.dir()
можно увидеть, что любая функция в JS это объект и увидеть все свойства этого объекта.

CONSOLE.TABLE()
Также есть метод =>
table
и с помощью table можно в консоли увидеть все свойства того или иного объекта, который передан в этот метод как аргумент, т.е. будет находиться между этими () скобками в 
табличном виде, т.е все свойства объекта будут отображены в виде таблицы.
И, можно использовать
console.table()
в консоли веб браузера либо в интерпретаторе Node.js

Это другие методы, которые доступны для использования, кроме метода log в объекте console =>
console.dir()
console.table()

0:27:12
Итак, теперь самое время выполнить команду 
console.log()
в консоли.

Давайте перейдем в веб браузер, там где у вас открыта консоль
0:27:27
и здесь введите 
console.log('Name')
нажимаем Enter и получаем следующий результат:
=========
> console.log('Name')
  Name
<. undefined
=========

В консоли отображается =>
Name
А также я вижу ответ от интерпретатора JS =>
undefined
И то что я вижу на этапе undefined - это по сути результат этого выражения console.log('Name')
потому что мы здесь видим выражение (что такое выражение мы рассмотрим чуть позже).
Но, любое выражение возвращает значение.
Я вам сказал что log это метод, это функция, и, любая функция возвращает значение.
Так вот, строка undefined - это значение которое возвращает функция log.
undefined - в переводе => не определено.
Т.е. по факту console.log() выполнил какую-то свою задачу, а именно напечатал в консоль =>
Name
то что мы передали как аргумент в вызове метода log, и, кроме этого этот метод вернул результат
undefined
поэтому здесь видна стрелочка 
<.
которая говорит о том что это значение было передано нам от интерпретатора JS (ответ).

А эта стрелка
>
это то что мы передали в интерпретатор.

Не переживайте, мы очень детально что такое объект, что такое свойство и методы объекта, что такое аргументы и т.д..
Но уже в начале этого курса я хочу чтобы вы понимали все что вы пишете с помощью языка программирования JS - это очень и очень важно.
Понимание - в первую очередь.

Теперь это же выражение console.log() введем используя интерактивный интерпретатор Node.js
Перейдите в терминал Windows PowerShell
Введите команду
note
и внутри напечатаем тоже самое 
console.log('Name')
Нажимаем Enter
Снова видим свое имя в консоли =>
Name
И видим еще =>
undefined (тот результат, который вернул метод log).

Мы увидели поведение, похожее в консоли веб браузера.

Итак, давайте продолжим.
Мы рассмотрели что есть три метода у console =>
log
dir
table

И, мы поговорили о трех ключевых понятиях в JS =>
ВЫРАЖЕНИЯ
ФУНКЦИИ
ОБЪЕКТЫ

И на самом деле вы только что познакомились со всеми этими тремя понятиями.
Давайте коротко вернемся к тому что мы написали в консоли =>
console здесь объект - как это можно проверить? =>
Просто написать console и нажать Enter.
И здесь развернуть полученный объект (а это объект - который внутри скобок {}), который состоит из ряда свойств.
Некоторые свойства, такие как 
clear
count
debug и т.д.
содержат функцию (оранжевый символ f) как значение - я вам раньше говорил что такие свойства называются методами, и вы конечно же можете вызывать методы.
Если немного проскроллить вниз, мы сможем найти такой метод как log, и только что мы вызывали этот метод - это метод объекта console.
Методы - это функции.
Кроме того - вызов функции - это ВЫРАЖЕНИЕ.
Почему это выражение? Потому что вызов функции всегда возвращает значение.
И в данном примере результат функции - это значение undefined.
*/