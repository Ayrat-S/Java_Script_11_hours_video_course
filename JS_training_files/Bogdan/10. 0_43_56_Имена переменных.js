// **************************************************************************************************************************************************************************
// Bogdan Stashchuk
// https://www.youtube.com/watch?v=CxgOKJh4zWE

/*
Имена переменных.

Теперь поговорим о том, как рекомендуется называть переменные в языке программирования JS.
На самом деле сам язык программирования JS позволяет вам выбирать любые названия для переменных.
Но если вы хотите писать правильный код, читабельный код, для того чтобы и другие разработчики могли понимать что же в этом коде происходит - есть определенные рекомендации,
касательно того как называть переменные.
И есть три варианта названий, кторые вы должны использовать JS.

=== 1. ===
Итак, первый вариант называется =>
PascalCase (Типы и классы)
В этом варианте название переменной начинается всегда с заглавной буквы, в данном примере
P (первая буква в Pascal)
Другие слова, которые являются частью переменной, например
Case
также должны начинаться с заглавной буквы, в этом примере
C (превая буква в Case)
Т.е.
P
и
C
в данном случае заглавные буквы.
Обратите внимание =>
PascalCase
здесь нет никаких пробелов, тире между словами, т.е. все пишется слитно, но с заглавной буквы
P
Так вот,
PascalCase
используется для того, чтобы называть типы и классы в JS.
Например, есть такой класс как - объект, либо Array (массив): они начинаются с заглавной буквы.
Потому что с помощью классов создаются экземпляры классов (и мы будем говорить об этом в этом курсе).
Но запомните, что
PascalCase
где первая буква заглавная, используется для именования типов и классов в JS.


=== 2. ===
Следующий вариант написания названия переменной
DB_PASSWORD (Значения известны до запуска приложения и не меняются на протяжении работы всего приложения).
В этом варианте все буквы заглавные и между словами используется знак подчеркивания
_
т.е.
DB
это одна часть названия переменной.
А
PASSWORD
это вторая часть названия переменной.
И между ними находится знак подчеркивания
_
Так вот, такой подход к названию переменных используется тогда, когда значения, которые вы присваиваете переменным, известны до запуска приложения и не меняются на 
протяжении работы вашего приложения.
Т.е. иными словами такие значения можно сказать что константы - они не изменяются во время работы приложения.
И вот когда вы хотите создать переменную и присвоить ей какое-то значение, например пароль для доступа к базе данных, то очень рекомендуется называть такую переменную 
используя все заглавные буквы и занки подчеркивания между словами.
Например =>
DB_PASSWORD
DB_USER
и т.д..
Т.е. любые константы которые не меняются на протяжении жизни вашего приложения.


=== 3. ===
Во всех же остальных случаях рекомендуется использовать
camelCase (Все остальные переменные).
0:47:05
camelCase
очень похож на 
PascalCase
за исключением того, что превая буква в 
camelCase
всегда в нижнем регистре, как в данном примере буква
c
Так вот, с помощью 
camelCase
рекомендуется называть все остальные переменные, которые не попадают в эти группы =>
PascalCase
и
DB_PASSWORD
т.е. это
camelCase
не класс, не тип, а также это не константа которая известна до запуска приложения.
И, конечно же 
camelCase
используется чаще всего.
Т.е. в
camelCase
все слова пишутся слитно.
Первое слово начинается с маленькой буквы
camel
и все остальные начинаются с заглавной буквы
Case


=== Итог. ===
Итак, запомнили.
Есть три подхода к названию переменных в JS =>
camelCase (Это основной вариант)
PascalCase (Если вы определяетет какие-то классы)
DB_PASSWORD (Такой вариант написания со всеми заглавными буквами и знаком подчеркивания между словами. И даже в некоторых случаях все такие переменные определяются в 
отдельном файле и потом с этого файла экспортируются и используются в других файдах, если приложение у вас большое и таких переменных много).
Итак, это то что я хотел скахать касательно названия переменных.
0:48:43

=== Очень важный момент. ===
Названия переменных должны быть понятными.
Понятными в первую очередь вам.
Потому что если вы будете называть переменные 
foo bar test xyz 
и т.д. то вам очень будет сложно понять что же собственно говоря хранится в такой переменной.
Но если вы назовете переменную 
myName
либо
DB_PASSWORD
то логически будет понятно, что же хранится в такой переменной.
И не забывайте что код который вы будете писать обычно будет читать не только один человек - вы, но и другие люди, другие разработчики.
И зачастую бывает так что над одним приложением работает много разных разработчиков и код в первую очерель должен быть понятным и читабельным.
Потому, названия переменных должны быть понятными.
Не сипользуйте короткие назнваия - лучше сделать названия более длинным, но понятным.
0:49:42

*/