// **************************************************************************************************************************************************************************
// Bogdan Stashchuk
// https://www.youtube.com/watch?v=CxgOKJh4zWE

/*
Объявление переменных.
В JS есть три ключевых слова, с помощью которых объявляются переменные =>
let
const
var

let
и
const
появились в ECMAScript 6.

ECMAScript - это стандарт JS, который описывает полностью все функции JS.
А уже различные веб браузеры, Node.js - применяют этот стандарт.

ECMAScript 6 - появился в 2015году, именно тогда появились такие ключевые слова как
let
и
const
с помощью которых можно объявлять новые переменные.

var
присутствовал в программировании JS с самого начала и ранее с помощью
var
и только с помощью 
var
определялись переменные.

Сейчас же не рекомендуется использовать 
var
а рекомендуется использовать только
let
и
const

Потому я вам рекомендую забыть о 
var
если вы будете писать каки-то новые приложения либо будете тренироваться в изучении языка JS - использовать только
let 
и 
const
0:50:55

В чем же разница между 
let
и
const

Прежде чем говорить об этом, давайте поговорим о том, что же такое объявление переменной.
Итак вы видите несколько примеров:
================
let a

const c = 10

a = true
================

let a
это объявление переменной с названием 
a
Перед названием переменной находится ключевое слово 
let
и с помощью этого ключевого слова
let
мы даем инструкцию интерпретатору JS создать новую переменную с названием 
a
т.е. это объявление переменной.

Далее, вы видите
const c = 10
Это объявление и присваивание, т.е. в одной строке можно объявить переменную и присвоить этой переменной значение.
Т.е. с помощью ключевого слова 
const
мы объявляем преременную
c
и с помощью оператора присваивания
=
мы присваиваем значиние 
10
этой вновь созданной переменной
c
т.е. объявление и присваивание в одной строке.

В следующем примере мы видим только присваивание =>
a = true
т.е. значение
true
присваивается переменной
a
Образаю внимание на то, что переменная 
a
была объявлена до этого =>
let a 
на строке выше.
А строкой ниже вы можете присвоить этой переменной значение, например
true
что и делается с помощью выражения 
a = true

Итак:
Вы можете объявит переменную отдельно =>
let a
Вы можете присвоить значение =>
a = true
А можете и объявить переменную и присвоить значение в одной строке =>
const c = 10

Итак, какая же разница между
let
и
const


=== let ===
Если вы объявляете переменную с помощью 
let
как в данном примере
let a = 10
то будет создана переменная 
a
и присвоено значение
10
Так вот, если вы использовали ключевое слово 
let
далее выможете присваивать значение новое значение той же переменной, как видно в этой строке 
a = 20
т.е. мы присваиваем переменной
a
которая была уже объявлена ранее, новое значение
20

Здесь 
let = b
мы объявляем новую переменную 
b
но не присваиваем ей новое значение, а присваиваем позже
b = false
Важно понимать, какое же значение будет иметь переменная 
b
после того, как вы введете команду 
let b
точнее инструкцию, потому что это инструкция для интерпретатора JS.
Так вот, значение переменной
b
между этими строками => 
=============
let b

b = false
=============
после объявления и до присваивания значения будет
undefined

undefined
это специальный тип который говорит о том что у пременной нету занчения, т.е. значение еще не определено значение отстутствует.

Итак, это было ключевое слово
let

Основной нюанс использования 
let
в том, что значения переменных, объявленных с помощью ключевого слова
let
можно переприсваивать, т.е. присваивать новое значение.

==== const ====
0:55:20
Итак давайте теперь посмотрим на 
const

=============
const c = 10
=============

Если вы используете
const
то вы должны в одной строке присвоить сразу же и значение переменной, которая объявлена с помощью ключевого слова
const
это обязательно.

Т.е. создание переменной и присваивание происходит в одной команде.
И потом, если вы попытаетесь присвоить новое значение, как видно здесь
с = 20
то получите ошибку =>
TypeError: Assignment to constant variable.
т.е. присваивание значения константной переменной.
Т.е. если вы объявили переменнуб с помощью ключевого слова
const
то присваивать новое занчение такой переменной запрещено.
В этом и разниуа между 
let
и
const

Если вы собираетесь в дальнейшем присваивать новое значение переменной, то делаете это с помощью
let
Если не собираетесь присваивать новое значение, то используете всегда 
const

Т.е. 
const
всегда должно стоять на первом месте в выборе варианта объявления той или йной переменной, а уже дальше
let

Итак, теперь давайте посмотрим такой пример, с объявлением и присваиванием.
Допустим, вы решили написать выражение
console.log(a)
где 
a
это название переменной.
Так вот, если вы напишете такое выражение в консоли вы получите ошибку =>
ReferenceError: a is not defined
т.е. такой переменной не существует.
И помните когда мы пытались просто ввести наше имя, не в виде строки, а без кавычек, то мы как раз и получали такую же ошибку - переменная не определена.
Т.е. сейчас в данном примере мы пытаемся получить доступ к значению переменной, которой не существует, т.е. переменная не определена.
0:57:34







*/