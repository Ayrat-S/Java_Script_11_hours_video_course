// **************************************************************************************************************************************************************************
// Bogdan Stashchuk
// https://www.youtube.com/watch?v=CxgOKJh4zWE

// Присвоение объекта в качестве значения переменной objectA:
const objectA = {
    a: 10,
    b: true,
    c: {
        d: 100,
        e: 'Jim',
        f: {
            g: 2000
        }
    }
}

const copyOfA = objectA // 1. Копируем ссылку на объект с одной переменной в другую.

/* Присвоение нового свойства внутри объекта. */
console.log('2. Список свойств переменной copyOfA, до присвоения нового свойства h:', copyOfA) // 2. Визуально изучаем список свойств объекта copyOfA
copyOfA.c.f.h = 6000 // 3. Присвоение объекту новое свойство { h: 6000 }, где с помощью точечной записи учтена иерархия вложенных объектов.
console.log('4. Список свойств переменной copyOfA, после присвоения нового свойства h:', copyOfA) // 4. Ищем добавленное свойство h внутри объекта copyOfA

/* Изменение значения свойства внутри объекта. */
copyOfA.c.f.h = 7000 // 5. Присваиваем значение 7000 для свойства h 
console.log('6. Значение свойства h у переменной copyOfA:', copyOfA.c.f.h) // 6. Проверяем измененное значение свойства h у константы copyOfA
console.log('7. Значение свойства h у переменной objectA:', objectA.c.f.h) // 7. Проверяем измененное значение свойства h у константы objectA

let compare_copyOfA_objectA = copyOfA == objectA // 8. Объявляем переменную, значением которой будет булево значение сравнения двух переменных c одинаковой ссылкой на объект.
console.log('9. Значения переменных copyOfA и objectA одинаковые:', compare_copyOfA_objectA) // 9. Вывод булево значения сравнения двух переменных.

// Чтобы полностью очистить консоль в девтулс от сохраненных констант и переменных - закройте консоль и откройте заново (или Ctrl + R).
